name: ci

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  Linux:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: init submodule
        run: |
          git submodule init
          git submodule update


      - name: Install missing software on ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake make


      - name: build with gtest
        run: |
          cmake -S . -B build
          cd build
          make
          make test
#  macOS:
#    runs-on: macos-latest
#    steps:
#
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Tests
#        run: bazel test --cxxopt=-std=c++14 --features=external_include_paths --test_output=errors ...
#
#
#  Windows:
#    runs-on: windows-latest
#    steps:
#
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Tests
#        run: bazel test --cxxopt=/std:c++14 --features=external_include_paths --test_output=errors ...
#
#
#  build:
#    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
#    # You can convert this to a matrix build if you need cross-platform coverage.
#    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Configure CMake
#        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
#        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
#        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
#
#      - name: Build
#        # Build your program with the given configuration
#        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
#
#      - name: Test
#        working-directory: ${{github.workspace}}/build
#        # Execute tests defined by the CMake configuration.
#        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#        run: ctest -C ${{env.BUILD_TYPE}}
#
